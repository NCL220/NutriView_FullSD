@inject HttpClient _client
@inject IJSRuntime js
@using NutriView.Shared.Domain
<body>
    <div class="container">
        <div class="leftDiv">
            @if (companies is not null)
            {
                @foreach (var company in companies)
                {
                    <h1>About @company.CompanyName</h1>
                    @if (company.CompanyImageByte != null && company.CompanyImageByte.Length > 0)
                    {
                        <img src="@($"data:image/png;base64,{Convert.ToBase64String(company.CompanyImageByte)}")" alt="Image" width="300" height="150" />
                    }
                    else
                    {
                        <p>No image available</p>
                    }
                    <p>@company.Mission</p>
                    <h2>Our Mission</h2>
                    <p>@company.CompanyDescription</p>
                }
            }
            <img src="images/ourmission.jpg">
        </div>
        <div class="rightDiv">
            @if (Staffs is not null)
            {
                @foreach (var Staff in Staffs)
                {
                    <h1>Name : @Staff.UserName Role: @Staff.Role</h1>
                    @if (Staff.ImageByte != null && Staff.ImageByte.Length > 0)
                    {
                        <img src="@($"data:image/png;base64,{Convert.ToBase64String(Staff.ImageByte)}")" alt="Image" width="100" height="300" />
                    }
                    else
                    {
                        <p>No image available</p>
                    }

                }
            }
        </div>
    </div>
</body>
@code {
    private List<Company>? companies;
    private List<Staff>? Staffs;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            companies = await _client.GetFromJsonAsync<List<Company>>("api/companies");
            if (companies is null)
            {
                companies = new List<Company>(); // Initialize to an empty list if null is returned
            }
            Staffs = await _client.GetFromJsonAsync<List<Staff>>("api/Staffs");
            if (Staffs is null)
            {
                Staffs = new List<Staff>(); // Initialize to an empty list if null is returned
            }
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
    }
}
