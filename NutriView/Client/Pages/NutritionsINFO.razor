@page "/NutritionsINFO"
@using NutriView.Shared.Domain
@inject HttpClient _client

<head>
    <style>
        /* Layout styling */
        .nutritional-db-container {
            display: flex;
            flex-direction: row;
            margin: 20px;
        }

        .sidebar {
            flex: 1;
            border-right: 1px solid #ddd;
            padding: 20px;
        }

        .content {
            flex: 4;
            padding: 20px;
        }

        /* Search box styling */
        .search-box {
            margin-bottom: 20px;
        }

        .search-input {
            padding: 10px;
            margin-right: 10px;
            width: calc(100% - 120px); /* Search button width + margin */
            display: inline-block;
        }

        .search-button {
            padding: 10px;
            width: 100px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Food item styling */
        .food-item {
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f8f8f8;
        }
    </style>
</head>

<div>
    <h1>Nutritional Database</h1>

    <div class="nutritional-db-container">
        <!-- Sidebar for filtering -->
        <div class="sidebar">
            <!-- Add filter options here -->
        </div>

        <!-- Main content area -->
        <div class="content">
            <!-- Search box -->
            <div class="search-box">
                <input class="search-input" placeholder="Search..." @bind="searchTerm" />
                <button class="search-button" @onclick="SearchFoods">Search</button>
            </div>

            <!-- Foods display section -->
            @if (foods is not null)
            {
                @foreach (var food in filteredFoods)
                {
                    <div class="food-item">
                        <h3>@food.Name</h3>
                        <img src="@food.ImagePath" alt="Image of @food.Name" /> <!-- Display the image -->
                        <p>Calories: @food.Calories kcal</p>
                        <p>Carbohydrates: @food.Carbohydrates g</p>
                        <p>Fats: @food.Fats g</p>
                        <p>Serving Size: @food.ServingSize g</p>
                        <p>Vitamins: @food.Vitamins</p>
                        <p>@food.FoodDesc</p>
                    </div>
                }

            }
            else
            {
                <p>Loading foods...</p>
            }
        </div>
    </div>
</div>

@code {
    private IList<Food> foods;
    private string searchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        foods = await _client.GetFromJsonAsync<List<Food>>("api/foods"); // Replace with your actual API endpoint
    }

    private void SearchFoods()
    {
        // This method is triggered when the search button is clicked
        // The logic to filter foods based on the search term is already defined in the 'filteredFoods' property
        StateHasChanged();
    }

    private IEnumerable<Food> filteredFoods => string.IsNullOrWhiteSpace(searchTerm)
        ? foods
        : foods.Where(f => f.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
}

