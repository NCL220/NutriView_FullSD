@page "/nutritionalquota"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using NutriView.Shared.Domain

<h3>Nutritional Quotas Configuration</h3>

@if (nutritionalQuotas is null)
{
    <p><em>Loading...</em></p>
}
else if (nutritionalQuotas.Count == 0)
{
    <p>No nutritional quotas found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Customer ID</th>
                <th>Target Calorie Daily</th>
                <th>Target Carb Daily</th>
                <th>Target BMI</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quota in nutritionalQuotas)
            {
                <tr>
                    <td>@quota.CustomerID</td>
                    <td>@quota.TargetCalorieDaily</td>
                    <td>@quota.TargetCarbDaily</td>
                    <td>@quota.TargetBMI</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditNutritionalQuota(quota.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteNutritionalQuota(quota.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<NutritionalQuota>? nutritionalQuotas;

    protected override async Task OnInitializedAsync()
    {
        nutritionalQuotas = await Http.GetFromJsonAsync<List<NutritionalQuota>>("api/NutritionalQuotas");
    }

    private void EditNutritionalQuota(int quotaId)
    {
        NavigationManager.NavigateTo($"/edit-nutritional-quota/{quotaId}");
    }

    private async Task DeleteNutritionalQuota(int quotaId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this nutritional quota?");
        if (confirmed)
        {
            var response = await Http.DeleteAsync($"api/NutritionalQuotas/{quotaId}");
            if (response.IsSuccessStatusCode)
            {
                nutritionalQuotas = nutritionalQuotas.Where(nq => nq.Id != quotaId).ToList();
                StateHasChanged();
            }
            else
            {
                // Handle error here
            }
        }
    }
}
