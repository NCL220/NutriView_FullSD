@using NutriView.Shared.Domain;
@inject HttpClient _client

<EditForm Model="@company" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="company">Company:</label>
        <InputText id="companyName" class="form-control" @bind-Value="company.CompanyName" />
        <ValidationMessage For="@(() => company.CompanyName)" />
    </div>

    <div class="form-group">
        <label for="mission">Mission:</label>
        <InputTextArea id="mission" class="form-control" @bind-Value="company.Mission" />
        <ValidationMessage For="@(() => company.Mission)" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <InputTextArea id="description" class="form-control" @bind-Value="company.CompanyDescription" />
        <ValidationMessage For="@(() => company.CompanyDescription)" />
    </div>

    <div class="form-group">
        <label for="CompanyImage">Insert Company Image : </label>
        <InputFile id="images" class="file-input" OnChange="HandleFileSelection" />
    </div>

    <button type="submit" class="btn btn-success">@ButtonText</button>
</EditForm>

@code {
    [Parameter] public Company? company { get; set; } = new Company();
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }

    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        var imgfile = e.GetMultipleFiles().FirstOrDefault();
        if (imgfile != null)
        {
            var buffer = new byte[imgfile.Size];
            using (var stream = imgfile.OpenReadStream())
            {
                await stream.ReadAsync(buffer, 0, buffer.Length);
            }
            company.CompanyImageByte = buffer;
        }
    }
}