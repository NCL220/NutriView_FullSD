@page "/nutritioninfos"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using NutriView.Shared.Domain

<h3>Nutrition Information</h3>

@if (nutritionInfos is null)
{
    <p><em>Loading...</em></p>
}
else if (nutritionInfos.Count == 0)
{
    <p>No nutrition information found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nutrition Name</th>
                <th>Description</th>
                <th>Image</th>
                <th>Staff ID</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var info in nutritionInfos)
            {
                <tr>
                    <td>@info.NutritionName</td>
                    <td>@info.NutritionDescription</td>
                    <td><img src="@info.NutritionImagePath" alt="Nutrition Image" /></td>
                    <td>@info.StaffId</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditNutritionInfo(info.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteNutritionInfo(info.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<NutritionInfo>? nutritionInfos;

    protected override async Task OnInitializedAsync()
    {
        nutritionInfos = await Http.GetFromJsonAsync<List<NutritionInfo>>("api/NutritionInfos");
    }

    private void EditNutritionInfo(int infoId)
    {
        NavigationManager.NavigateTo($"/edit-nutrition-info/{infoId}");
    }

    private async Task DeleteNutritionInfo(int infoId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this nutrition information?");
        if (confirmed)
        {
            var response = await Http.DeleteAsync($"api/NutritionInfos/{infoId}");
            if (response.IsSuccessStatusCode)
            {
                nutritionInfos = nutritionInfos.Where(ni => ni.Id != infoId).ToList();
                StateHasChanged();
            }
            else
            {
                // Handle error here
            }
        }
    }
}
