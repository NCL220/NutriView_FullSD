@page "/subscriptionpage/purchaseconfirmation/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@using NutriView.Shared.Domain

<h3>Purchase Confirmation</h3>
<hr />


<style>
    .subscription-container {
        max-width: 600px;
        margin: auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

    .subscription-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .form-select {
        width: 100%;
        padding: 10px;
        margin-bottom: 20px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

    .btn-success {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #28a745;
        color: white;
        cursor: pointer;
        font-size: 16px;
        margin-top: 20px;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .loading-message {
        text-align: center;
        font-size: 18px;
    }
</style>

<div class="subscription-container">
    <h3 class="subscription-header">Purchase Confirmation</h3>
    @if (subscriptionInfo == null || customers == null)
    {
        <p class="loading-message">Loading subscription details...</p>
    }
    else
    {
        <div>
            <h2>@subscriptionInfo.SubTierName</h2>
            <p>@subscriptionInfo.SubDescription</p>
            <p>@subscriptionInfo.SubCost.ToString("C")</p>

            <select @bind="selectedCustomerId" class="form-select">
                <option value="">-- Select Customer --</option>
                @foreach (var customer in customers)
                {
                    <option value="@customer.Id">@customer.UserName</option>
                }
            </select>

            <div class="form-group">
                <label>Date Start:</label>
                <div>
                    <input class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" disabled />
                </div>
            </div>

            <div class="form-group">
                <label>Date End:</label>
                <div>
                    <input class="form-control" value="@CalculateEndDate(subscriptionInfo.SubMonthsDuration).ToString("yyyy-MM-dd")" disabled />
                </div>
            </div>

            <button class="btn btn-success" @onclick="CompleteSubscription">
                Confirm Subscription
            </button>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private SubscriptionInfo? subscriptionInfo;
    private List<Customer>? customers;
    private int selectedCustomerId;
    private Subscription subscription = new Subscription(); // Initialize the subscription object

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subscriptionInfo = await _client.GetFromJsonAsync<SubscriptionInfo>($"{Endpoints.SubscriptionInfosEndpoint}/{Id}");
            customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");

            // After the above line, check if subscriptionInfo has the correct SubscriptionInfoId
            Console.WriteLine($"Retrieved subscription info ID: {subscriptionInfo?.Id}");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"An error occurred while fetching data: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An unexpected error occurred: {ex.Message}");
        }
    }

    private DateTime CalculateEndDate(int subMonthsDuration)
    {
        // Calculate the end date based on the subscription plan
        return DateTime.Now.AddMonths(subMonthsDuration);
    }

    private async Task CompleteSubscription()
    {
        if (selectedCustomerId == 0)
        {
            Console.WriteLine("Please select a customer before confirming the subscription.");
            return;
        }

        // Set the SubscriptionInfoId
        subscription.SubInfoID = Id;

        // Set the CustomerId
        subscription.CustomerID = selectedCustomerId;

        // Set the DateStart property with the current date
        subscription.DateStart = DateTime.Now;

        var response = await _client.PostAsJsonAsync($"{Endpoints.SubscriptionsEndpoint}", subscription);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine($"Subscription {Id} confirmed for customer {selectedCustomerId}");
            _navManager.NavigateTo($"/thank-you");
        }
        else
        {
            // Handle errors here
            Console.WriteLine("Failed to assign subscription to customer.");
        }
    }
}