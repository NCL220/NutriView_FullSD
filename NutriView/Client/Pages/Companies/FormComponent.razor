@using NutriView.Shared.Domain;
@inject HttpClient _client

<EditForm Model="@company" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="company">Company:</label>
        <InputText id="companyName" class="form-control" @bind-Value="company.CompanyName" />
        <ValidationMessage For="@(() => company.CompanyName)" />
    </div>

    <div class="form-group">
        <label for="mission">Mission:</label>
        <InputTextArea id="mission" class="form-control" @bind-Value="company.Mission" />
        <ValidationMessage For="@(() => company.Mission)" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <InputTextArea id="description" class="form-control" @bind-Value="company.CompanyDescription" />
        <ValidationMessage For="@(() => company.CompanyDescription)" />
    </div>

    <div class="form-group">
        <label for="imagePath">Image Path:</label>
        <InputText id="imagePath" class="form-control" @bind-Value="company.CompanyImagePath" />
        <ValidationMessage For="@(() => company.CompanyImagePath)" />
    </div>

    
    
    <button type="submit" class="btn btn-success">@ButtonText</button>
</EditForm>

@code {
    [Parameter] public Company? company { get; set; } = new Company();
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }
}