@page "/submitfoodentry"
@inject HttpClient _client
@inject NavigationManager _navManager
@using NutriView.Client.Pages
@layout NoMenuLayout
<head>
    <title>Food Cards</title>
    <style>
        #div1, #div2 {
            float: left;
            width: 100px;
            height: 35px;
            margin: 10px;
            padding: 10px;
            border: 1px solid black;
        }

        .card {
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px;
            padding: 10px;
            width: 200px;
            text-align: center;
        }

        .selected-food-container {
            margin-top: 20px;
            border: 2px solid #ccc;
            padding: 10px;
            border-radius: 5px;
        }

        .selected-food-card {
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 5px;
            padding: 5px;
            width: 100px;
            text-align: center;
            cursor: pointer;
            display: inline-block;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
            width: 40%;
        }

            .card:hover {
                box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
            }

        .container {
            padding: 2px 16px;
        }
    </style>
</head>
<body>

    <h2>Food Cards</h2>
    <div id="div1">
    @foreach (var foodItem in foods)
    {
        < div class="card" ondrop="drop(event)" ondragover="allowDrop(event)drop(event)" ondragover="allowDrop(event)">
            <h3 draggable="true" ondragstart="drag(event)" id="drag1" width="88" height="31">@foodItem.Name</h3>
            <p>@foodItem.Calories</p>
        </>
    }
    </div>
    <div id="div2" ondrop="drop(event)" ondragover="allowDrop(event)">
        <h3>Selected Food:</h3>
        <div id="selectedFood"></div>
    </div>

    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var data = ev.dataTransfer.getData("text");
            ev.target.appendChild(document.getElementById(data));
        }
    </script>
</body>

@code {
    private List<NutriView.Shared.Domain.Food>? foods;
    protected async override Task OnInitializedAsync()
    {
       
        try
        {
            foods = await _client.GetFromJsonAsync<List<NutriView.Shared.Domain.Food>>("api/Foods");
            if (foods is null)
            {
                foods = new List<NutriView.Shared.Domain.Food>(); // Initialize to an empty list if null is returned
            }
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
    }
}