@using NutriView.Shared.Domain;
@inject HttpClient _client

<EditForm Model="@serviceLinkSubInfo" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
    <ValidationSummary />
	<fieldset disabled="@Disabled">
		<div class="form-group">
			<label>
				SubscriptionInfoID:
			</label>
		<div>
				<InputSelect @bind-Value="serviceLinkSubInfo.SubscriptionInfoID" class="form-control">
				<option value="">--Select Subscription Information--</option>
					@if (SubscriptionInfos != null)
					{
						@foreach (var SubscriptionInfo in SubscriptionInfos)
						{
							<option value="@SubscriptionInfo.Id">@SubscriptionInfo.SubTierName</option>
						}
					}
			</InputSelect>
		</div>
	</div>
		<div class="form-group">
			<label>
				SubServiceID:
			</label>
			<div>
				<InputSelect @bind-Value="serviceLinkSubInfo.ServiceID" class="form-control">
					<option value="">--Select Services--</option>
					@if (Services != null)
					{
						@foreach (var services in Services)
						{
							<option value="@services.Id">@services.ServiceName</option>
						}
					}
				</InputSelect>
			</div>
		</div>
    </fieldset>
	@if (!Disabled)
	{
		<button type="submit" class="btn btn-success btn-block">
			@ButtonText
		</button>
	}
	
	<BackToList Target="subInfoLinkServices" />
	}
</EditForm>
@code {
	[Parameter] public bool Disabled { get; set; } = false;
	[Parameter] public ServiceLinkSubInfo? serviceLinkSubInfo { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }

	[Parameter] public bool SubmitDataThroughForm { get; set; }

	private IList<SubscriptionInfo>? SubscriptionInfos;
	private IList<Service>? Services;
	protected async override Task OnInitializedAsync()
    {
		SubscriptionInfos = await _client.GetFromJsonAsync<List<SubscriptionInfo>>($"{Endpoints.SubscriptionInfosEndpoint}");
		Services = await _client.GetFromJsonAsync<List<Service>>($"{Endpoints.ServicesEndpoint}");
    }
    
}