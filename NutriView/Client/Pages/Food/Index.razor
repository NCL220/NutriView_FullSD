@page "/foods"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using NutriView.Shared.Domain

<h3>Foods Configuration</h3>
<a href="/foods/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Food
</a>
@if (foods is null)
{
    <p><em>Loading...</em></p>
}
else if (foods.Count == 0)
{
    <p>No food items found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Calories</th>
                <th>Carbohydrates (g)</th>
                <th>Fats (g)</th>
                <th>Vitamins</th>
                <th>Serving Size (g)</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var food in foods)
            {
                <tr>
                    <td>@food.Name</td>
                    <td>@food.Calories</td>
                    <td>@food.Carbohydrates</td>
                    <td>@food.Fats</td>
                    <td>@food.Vitamins</td>
                    <td>@food.ServingSize</td>
                    <td>@food.FoodDesc</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditFood(food.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteFood(food.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Food>? foods;

    protected override async Task OnInitializedAsync()
    {
        foods = await Http.GetFromJsonAsync<List<Food>>("api/foods");
    }

    private void EditFood(int foodId)
    {
        NavigationManager.NavigateTo($"/foods/edit/{foodId}");
    }

    private async Task DeleteFood(int foodId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this food item?");
        if (confirmed)
        {
            var response = await Http.DeleteAsync($"api/foods/{foodId}");
            if (response.IsSuccessStatusCode)
            {
                foods = foods.Where(f => f.Id != foodId).ToList();
                StateHasChanged();
            }
            else
            {
                // Handle error here
            }
        }
    }
}
