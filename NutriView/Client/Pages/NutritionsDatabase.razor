@page "/NutritionsINFOs"
@using NutriView.Shared.Domain
@inject HttpClient _client

<head>
    <style>
        /* Layout styling */
        .nutritional-db-container {
            display: grid;
            grid-template-columns: 1fr 3fr;
            gap: 20px;
            margin: 20px;
        }

        .sidebar {
            border-right: 2px solid #eee;
            padding: 20px;
        }

        .content {
            padding: 20px;
        }

        /* Search box styling */
        .search-box {
            display: flex;
            margin-bottom: 20px;
            gap: 10px;
        }

        .search-input {
            flex-grow: 1;
            padding: 10px;
            border: 2px solid #ccc;
            border-radius: 5px;
        }

        .search-button {
            padding: 10px 20px;
            background-color: #5cb85c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            white-space: nowrap; /* Prevents wrapping of text in the button */
        }

            .search-button:hover {
                background-color: #4cae4c;
            }

        /* Food item styling */
        .food-item, .nutrition-item {
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            padding: 20px;
            display: flex;
            align-items: center;
            gap: 20px;
        }

            .food-item img, .nutrition-item img {
                width: 100px; /* Adjust as needed */
                height: 100px; /* Adjust as needed */
                object-fit: cover;
                border-radius: 50%;
            }

            .food-item h3, .nutrition-item h3 {
                margin: 0;
                color: #333;
                font-size: 1.25rem;
            }

            .food-item p, .nutrition-item p {
                margin: 5px 0;
                color: #666;
            }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .nutritional-db-container {
                grid-template-columns: 1fr;
            }

            .sidebar {
                border-right: none;
                border-bottom: 2px solid #eee;
            }
        }
    </style>
</head>

<body>
    <h1>Nutritional Database</h1>

    <div class="nutritional-db-container">
        <!-- Sidebar for filtering -->
        <div class="sidebar">
            <!-- Add filter options here -->
        </div>

        <!-- Main content area -->
        <div class="content">
            <!-- Search and filter box -->
            <div class="search-filter-box">
                <input class="search-input" placeholder="Search foods..." @bind="foodSearchTerm" />
                <input class="search-input" placeholder="Search nutrition..." @bind="nutritionSearchTerm" />
                <button class="search-button" @onclick="SearchDatabase">Search</button>
            </div>

            <!-- Foods display section -->
            <div>
                <h2>Foods</h2>
                @if (foods is not null)
                {
                    @foreach (var food in filteredFoods)
                    {
                        <div class="food-item">
                            <h3>@food.Name</h3>
                            @if (food.Imagebytes != null && food.Imagebytes.Length > 0)
                            {
                                <img src="@($"data:image/png;base64,{Convert.ToBase64String(food.Imagebytes)}")" alt="Image" width="150" height="150" />
                            }
                            else
                            {
                                <p>No image available</p>
                            }
                            <p>Calories: @food.Calories kcal</p>
                            <p>Carbohydrates: @food.Carbohydrates g</p>
                            <p>Fats: @food.Fats g</p>
                            <p>Serving Size: @food.ServingSize g</p>
                            <p>Vitamins: @food.Vitamins</p>
                            <p>@food.FoodDesc</p>
                        </div>
                    }
                }
                else
                {
                    <p>Loading foods...</p>
                }
            </div>

            <!-- Nutrition Information display section -->
            <div>
                <h2>Nutrition Information</h2>
                @if (nutritionInfos is not null)
                {
                    @foreach (var info in filteredNutritionInfos)
                    {
                        <div class="nutrition-item">
                            <h3>@info.NutritionName</h3>
                            <img src="@info.NutritionImagePath" alt="Image of @info.NutritionName" />
                            <p>@info.NutritionDescription</p>
                        </div>
                    }
                }
                else
                {
                    <p>Loading nutritional information...</p>
                }
            </div>
        </div>
    </div>
</body>

@code {
    private IList<Food> foods;
    private IList<NutritionInfo> nutritionInfos;
    private string foodSearchTerm = "";
    private string nutritionSearchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        foods = await _client.GetFromJsonAsync<List<Food>>("api/foods"); // Replace with your actual API endpoint
        nutritionInfos = await _client.GetFromJsonAsync<List<NutritionInfo>>("api/nutritionInfos"); // Replace with your actual API endpoint
    }

    private void SearchDatabase()
    {
        StateHasChanged();
    }

    private IEnumerable<Food> filteredFoods => string.IsNullOrWhiteSpace(foodSearchTerm)
        ? foods
        : foods.Where(f => f.Name.Contains(foodSearchTerm, StringComparison.OrdinalIgnoreCase)).ToList();

    private IEnumerable<NutritionInfo> filteredNutritionInfos => string.IsNullOrWhiteSpace(nutritionSearchTerm)
        ? nutritionInfos
        : nutritionInfos.Where(n => n.NutritionName.Contains(nutritionSearchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
}