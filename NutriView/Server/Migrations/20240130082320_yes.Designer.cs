// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutriView.Server.Data;

#nullable disable

namespace NutriView.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240130082320_yes")]
    partial class yes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0afa81d9-cb31-4883-ae16-c9d0242e3440",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "a1329842-8556-4ee7-ae1a-fd648064c54a",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "428fdfc4-086b-4aba-bb98-148f31eaa143",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        },
                        new
                        {
                            Id = "f5a29727-ea9d-41d4-9175-dd1fb6ec2755",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8aa738a7-6c07-4e5a-8a7f-5637388c41b4",
                            RoleId = "0afa81d9-cb31-4883-ae16-c9d0242e3440"
                        },
                        new
                        {
                            UserId = "41624b27-7496-447c-b299-4892483d6b47",
                            RoleId = "a1329842-8556-4ee7-ae1a-fd648064c54a"
                        },
                        new
                        {
                            UserId = "1507dbd1-1c83-4ad2-9b0e-4d298c7b4521",
                            RoleId = "428fdfc4-086b-4aba-bb98-148f31eaa143"
                        },
                        new
                        {
                            UserId = "4d3dfcba-a0af-4b10-989d-d63dcfec5e97",
                            RoleId = "f5a29727-ea9d-41d4-9175-dd1fb6ec2755"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NutriView.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8aa738a7-6c07-4e5a-8a7f-5637388c41b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6fbc4f33-4083-426f-94cf-ee20eb380bf5",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOQnKZFszZEdEC/+3iDgyy2ux8kgvhFIOggBCMIpyvT0iPEZu2CeQXq+4rZG4yaa0A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f90caa84-2a47-4eac-86a7-8357981c5de3",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        },
                        new
                        {
                            Id = "41624b27-7496-447c-b299-4892483d6b47",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0d97c19b-2961-469b-a6b1-f40d9b5aa8b8",
                            Email = "Customer@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Customer",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "Customer@LOCALHOST.COM",
                            NormalizedUserName = "CUSTOMER@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3BS1fVN7p/DJolpyzqCLEc3/K740SqBwkIWXi760wfE/1csUKw2QDHmxI1KHBFSg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44227144-01e0-4c41-ad24-797f9620af12",
                            TwoFactorEnabled = false,
                            UserName = "Customer@localhost.com"
                        },
                        new
                        {
                            Id = "1507dbd1-1c83-4ad2-9b0e-4d298c7b4521",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0f5131ec-794e-44d0-be00-6d126ffef1c4",
                            Email = "Manager@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Manager",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "Manager@LOCALHOST.COM",
                            NormalizedUserName = "MANAGER@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ5KhXwRjL2QjoEBAX2CLK3FXdHOMAkPOoxA7j6q/lVms37uM2uzLftVbyMT2QQoWg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "814b84ff-9d37-462e-a1d8-ab0a1b482c69",
                            TwoFactorEnabled = false,
                            UserName = "Manager@localhost.com"
                        },
                        new
                        {
                            Id = "4d3dfcba-a0af-4b10-989d-d63dcfec5e97",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a342e264-495b-4505-9420-33f5b7f93761",
                            Email = "Staff@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Staff",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "Staff@LOCALHOST.COM",
                            NormalizedUserName = "STAFF@LOCALHOST.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJY3pv2OV8b8hYfZdc6Nr4oqmlg2TsH8g6cgkFKpXM1GcE68JWNjMJpZIK5gHMXypA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "979011e4-8ea7-4f4e-90b9-e43b0ef93787",
                            TwoFactorEnabled = false,
                            UserName = "Staff@localhost.com"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyImageByte")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyDescription = "At NuriView Corporations, we believe that a heathy lifestyle would always begins with proper nutrition.We are a dedicated team of nutritionists and dietitians comitted in providing you with the knowledge and tools to aid you in your journey to a healthier diet.",
                            CompanyName = "NutriView",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1404),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1404),
                            Mission = "Our mission is to empower individuals to achieve optimal health through mindful eating. We understand that nutrition is not always a one-size-fits-all.Our goal is to guide you on a personalized journey towards a balanced and nourishing lifestyle that will bring you a step closer to a healthier you.",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CompanyDescription = "Not Yet Available",
                            CompanyName = "NutriViewCorps",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1406),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1407),
                            Mission = "Our Mission is to encourage people to eat healthy and live healthy",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 31,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8388),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8403),
                            Email = "Test@Blazor.com",
                            Gender = "Male",
                            Height = 160.0,
                            Password = "Test222",
                            UpdatedBy = "System",
                            UserName = "TestLim",
                            Weight = 88.5
                        },
                        new
                        {
                            Id = 2,
                            Age = 32,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8408),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8409),
                            Email = "Test2@Blazor.com",
                            Gender = "Female",
                            Height = 178.0,
                            Password = "Test2212",
                            UpdatedBy = "System",
                            UserName = "TestRRLim",
                            Weight = 77.0
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.EntryLinkFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodEntryID")
                        .HasColumnType("int");

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodEntryID");

                    b.HasIndex("FoodID");

                    b.ToTable("EntryLinkFoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodEntryID = 2,
                            FoodID = 2
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FoodEntryID = 1,
                            FoodID = 1
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Fats")
                        .HasColumnType("float");

                    b.Property<string>("FoodDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Imagebytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ServingSize")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vitamins")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 25.0,
                            Carbohydrates = 6.0,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2295),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2296),
                            Fats = 0.10000000000000001,
                            FoodDesc = "Carrots Contains 25 Calories and 6g of Carbohydrates , etc",
                            Name = "Carrots",
                            ServingSize = 61.0,
                            StaffId = 1,
                            UpdatedBy = "System",
                            Vitamins = "A,C,K"
                        },
                        new
                        {
                            Id = 2,
                            Calories = 165.0,
                            Carbohydrates = 0.0,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2299),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2300),
                            Fats = 3.6000000000000001,
                            FoodDesc = "Chicken Contains 165 Calories per 100 grams and does not have any Carbohydrates , etc",
                            Name = "Chicken",
                            ServingSize = 100.0,
                            StaffId = 2,
                            UpdatedBy = "System",
                            Vitamins = "A, B6, C, D, E"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.FoodEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Time_Stamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalCalories")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("FoodEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CustomerID = 1,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8947),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8948),
                            Time_Stamp = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8947),
                            TotalCalories = 22.0,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CustomerID = 2,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8950),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8951),
                            Time_Stamp = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8949),
                            TotalCalories = 34.0,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodEntryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PortionSize")
                        .HasColumnType("float");

                    b.Property<string>("TimePeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodEntryID");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 0.0,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 8, 23, 19, 998, DateTimeKind.Utc).AddTicks(9396),
                            DateUpdated = new DateTime(2024, 1, 30, 8, 23, 19, 998, DateTimeKind.Utc).AddTicks(9397),
                            FoodEntryID = 1,
                            Name = "Carrots",
                            PortionSize = 1.0,
                            TimePeriod = "Morning",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Calories = 0.0,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 8, 23, 19, 998, DateTimeKind.Utc).AddTicks(9400),
                            DateUpdated = new DateTime(2024, 1, 30, 8, 23, 19, 998, DateTimeKind.Utc).AddTicks(9400),
                            FoodEntryID = 2,
                            Name = "ChickenRice",
                            PortionSize = 1.0,
                            TimePeriod = "Morning",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.NutritionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("NutritionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("NutritionInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1597),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1598),
                            NutritionDescription = "Essential for vision, immune function, and skin health.",
                            NutritionImagePath = "-",
                            NutritionName = "Vitamin A",
                            StaffId = 1,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1600),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1600),
                            NutritionDescription = "Supports bone health, immune system, and overall well-being.",
                            NutritionImagePath = "-",
                            NutritionName = "Vitamin D",
                            StaffId = 2,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.NutritionalQuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("TargetBMI")
                        .HasColumnType("float");

                    b.Property<double>("TargetCalorieDaily")
                        .HasColumnType("float");

                    b.Property<double>("TargetCarbDaily")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("NutritionalQuotas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CustomerID = 1,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(9694),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(9696),
                            TargetBMI = 19.0,
                            TargetCalorieDaily = 2000.0,
                            TargetCarbDaily = 300.0,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CustomerID = 2,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(9698),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(9699),
                            TargetBMI = 21.0,
                            TargetCalorieDaily = 2000.0,
                            TargetCarbDaily = 290.0,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceCode = "",
                            ServiceDescription = "Test",
                            ServiceName = "Test"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceCode = "",
                            ServiceDescription = "Test2",
                            ServiceName = "Test2"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.ServiceLinkSubInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionInfoID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceID");

                    b.HasIndex("SubscriptionInfoID");

                    b.ToTable("ServiceLinkSubInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceID = 1,
                            SubscriptionInfoID = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceID = 2,
                            SubscriptionInfoID = 2
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageByte")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2719),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2721),
                            Email = "ngchunlim04@gmail.com",
                            ManagerID = 1,
                            Password = "Chun11",
                            PhoneNumber = 87993192,
                            Role = "Manager",
                            UpdatedBy = "System",
                            UserName = "ChunLim"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2724),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(2724),
                            Email = "Test04@gmail.com",
                            ManagerID = 2,
                            Password = "Lim12",
                            PhoneNumber = 87993192,
                            Role = "Manager",
                            UpdatedBy = "System",
                            UserName = "Kenneth"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionInfoId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SubscriptionInfoId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 0.0,
                            CreatedBy = "System",
                            CustomerID = 1,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8636),
                            DateEnd = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8634),
                            DateStart = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8632),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8636),
                            SubInfoID = 0,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 0.0,
                            CreatedBy = "System",
                            CustomerID = 2,
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8640),
                            DateEnd = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8639),
                            DateStart = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8639),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 998, DateTimeKind.Local).AddTicks(8640),
                            SubInfoID = 0,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("NutriView.Shared.Domain.SubscriptionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("SubCost")
                        .HasColumnType("float");

                    b.Property<string>("SubDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMonthsDuration")
                        .HasColumnType("int");

                    b.Property<string>("SubTierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1180),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1201),
                            SubCost = 5.0,
                            SubDescription = "Unlocks The Personal Quota Tracker",
                            SubMonthsDuration = 0,
                            SubTierName = "Health Enthusiasts",
                            SubType = "Monthly",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1204),
                            DateUpdated = new DateTime(2024, 1, 30, 16, 23, 19, 797, DateTimeKind.Local).AddTicks(1205),
                            SubCost = 30.0,
                            SubDescription = "Unlocks The Personal Quota Tracker and other Features!!",
                            SubMonthsDuration = 0,
                            SubTierName = "Health Enthusiasts",
                            SubType = "Yearly",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NutriView.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NutriView.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriView.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NutriView.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Customer", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Gender", null)
                        .WithMany("Customers")
                        .HasForeignKey("GenderId");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.EntryLinkFood", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.FoodEntry", "FoodEntry")
                        .WithMany("EntryLinkFood")
                        .HasForeignKey("FoodEntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriView.Shared.Domain.Food", "Food")
                        .WithMany("EntryLinkFood")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("FoodEntry");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Food", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Staff", "Staff")
                        .WithMany("Foods")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.FoodEntry", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Customer", "Customer")
                        .WithMany("Entries")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Gender", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Meal", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.FoodEntry", "FoodEntry")
                        .WithMany("Meals")
                        .HasForeignKey("FoodEntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodEntry");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.NutritionInfo", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Staff", "Staff")
                        .WithMany("NutritionInfos")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.NutritionalQuota", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.ServiceLinkSubInfo", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Service", "Service")
                        .WithMany("ServiceLinkSubInfos")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriView.Shared.Domain.SubscriptionInfo", "SubscriptionInfo")
                        .WithMany("ServiceLinkSubInfos")
                        .HasForeignKey("SubscriptionInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("SubscriptionInfo");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Staff", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Company", "Company")
                        .WithMany("Staffs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Subscription", b =>
                {
                    b.HasOne("NutriView.Shared.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NutriView.Shared.Domain.SubscriptionInfo", "SubscriptionInfo")
                        .WithMany()
                        .HasForeignKey("SubscriptionInfoId");

                    b.Navigation("Customer");

                    b.Navigation("SubscriptionInfo");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Company", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Customer", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Food", b =>
                {
                    b.Navigation("EntryLinkFood");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.FoodEntry", b =>
                {
                    b.Navigation("EntryLinkFood");

                    b.Navigation("Meals");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Gender", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Service", b =>
                {
                    b.Navigation("ServiceLinkSubInfos");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.Staff", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("NutritionInfos");
                });

            modelBuilder.Entity("NutriView.Shared.Domain.SubscriptionInfo", b =>
                {
                    b.Navigation("ServiceLinkSubInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
